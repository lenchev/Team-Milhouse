var healthBlock = new Kinetic.Rect({
            width: 200,
            height: 50,
            stroke: 'blue',
            fill: 'red',
            opacity: 0.9
        });

        healthBlock.position({ x: 110, y: 490 }); //set coordinates
        layer.add(healthBlock);

        var isTheAnswerWrong = true;
        var wrongAnswers; // set the number of wrong answers so far

        if (isTheAnswerWrong) {
            var reducedHealth = drawReducedHealth(healthBlock.attrs.width + healthBlock.attrs.x, healthBlock.attrs.y, wrongAnswers);
            layer.add(reducedHealth);
        }

        stage.add(layer);
    }

    function drawReducedHealth(startRenderPosition, height, wrongAnswers) {
        var imgWidth = (40 * wrongAnswers);

        var img = new Kinetic.Rect({
            width: imgWidth,
            height: 48,
            fill: 'white',
            opacity: 0.95
        });

        var positionX = startRenderPosition - imgWidth;
        var positionY = height;
        img.position({ x: positionX, y: positionY + 1 });

        return img;
    }


	
	
	<div id="container"></div>

        var stage = new Kinetic.Stage({
            container: 'container',
            width: 500,
            height: 500
        });
        var layer = new Kinetic.Layer();

        var healthPositionX = 50;
        var healthPositionY = 50;
        var healthWidth = 200;
        var healthHeight = 50;
        var distanceBetweenTheTwoHealthBlocks = 250;

        createHealthBlock(healthWidth, healthHeight, healthPositionX, healthPositionY); // create Player health block
        createHealthBlock(healthWidth, healthHeight, healthPositionX + distanceBetweenTheTwoHealthBlocks, healthPositionY); // create enemey health block

        var isThePlayersAnswerWrong = false; // 
        var playerWrongAnswers = 0;
        var enemyWrongAnswers = 1;

        renderHealthDamage(isThePlayersAnswerWrong, playerWrongAnswers, enemyWrongAnswers,
                            distanceBetweenTheTwoHealthBlocks);
        // render the reduced health 

        stage.add(layer);

        function renderHealthDamage(isThePlayerAnswerWrong, numberOfWrongPlayerAnswers, numberOfWrongEnemyAnswers, distanceBetweenTheTwoHealthBlocks) {
            var startRenderingHealthDamagePosition = healthWidth + healthPositionX;

            if (isThePlayerAnswerWrong) {
                var reducedPlayerHealth = renderReducedHealth(startRenderingHealthDamagePosition, healthPositionY, numberOfWrongPlayerAnswers);
                layer.add(reducedPlayerHealth);
            }
            else {
                var startRenderingPosition = startRenderingHealthDamagePosition + distanceBetweenTheTwoHealthBlocks;
                var reducedEnemyHealth = renderReducedHealth(startRenderingPosition, healthPositionY, numberOfWrongEnemyAnswers);
                layer.add(reducedEnemyHealth);
            }
        }
        
        function createHealthBlock(healthWidth, healthHeight, healthPositionX, healthPositionY) {
            var healthBlock = new Kinetic.Rect({
                width: healthWidth,
                height: healthHeight,
                stroke: 'blue',
                fill: 'red',
                opacity: 0.9
            });

            healthBlock.position({ x: healthPositionX, y: healthPositionY }); //set coordinates

            layer.add(healthBlock);
        }

        function renderReducedHealth(startRenderPosition, height, wrongAnswers) {
            var damage = healthWidth / 5;

            var img = new Kinetic.Rect({
                width: damage,
                height: healthHeight - 2,
                fill: 'white',
                opacity: 0.95
            });

            var positionX = startRenderPosition - damage * wrongAnswers;
            var positionY = height;
            img.position({ x: positionX, y: positionY + 1 });

            return img;
        }



